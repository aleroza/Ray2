name: Create backup and upload it to network
on:
  schedule:
    - cron: '0 1 * * 0'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Create backup and upload it to network
        uses: appleboy/ssh-action@master
        env:
          COMPOSE_PATH: ${{ vars.COMPOSE_PATH }}
          STORAGE_API_ID: ${{ secrets.STORAGE_API_ID }}
          STORAGE_API_KEY: ${{ secrets.STORAGE_API_KEY }}
          BACKUP_ENCRYPTION_KEY: ${{ secrets.BACKUP_ENCRYPTION_KEY }}
          BACKUP_DIR: "/opt/BACKUP_TEMP"
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script_stop: true
          envs: COMPOSE_PATH,STORAGE_API_ID,STORAGE_API_KEY,BACKUP_ENCRYPTION_KEY,BACKUP_DIR
          script: |
            set -x
            b2 account authorize $STORAGE_API_ID $STORAGE_API_KEY
            sudo rm -rf $BACKUP_DIR
            mkdir $BACKUP_DIR

            cd $COMPOSE_PATH
            docker-compose stop marzban
            find $COMPOSE_PATH -exec stat --format='%A %s %U %G %y %n' {} \; | grep -v 'prometheus_data' > $BACKUP_DIR/status_file.txt
            sudo rsync -av --progress $COMPOSE_PATH/ $BACKUP_DIR --exclude prometheus_data
            docker-compose start marzban

            cd $BACKUP_DIR
            sudo tar -cf ./marzban.tgz ./marzban
            sudo tar -cf ./marzban_data.tgz ./marzban_data

            sudo ccrypt ./marzban.tgz -eK $BACKUP_ENCRYPTION_KEY
            sudo ccrypt ./marzban_data.tgz -eK $BACKUP_ENCRYPTION_KEY

            time_stamp=$(date +%d-%m-%Y)
            mkdir -p "${time_stamp}"

            b2 sync --exclude-dir-regex "logs|geodat|marzban" ./ b2://ray2-backups/"${time_stamp}"
            cd ..
            sudo rm -rf $BACKUP_DIR
